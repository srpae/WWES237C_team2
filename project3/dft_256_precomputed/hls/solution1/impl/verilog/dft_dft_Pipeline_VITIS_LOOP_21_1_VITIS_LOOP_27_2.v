// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_VITIS_LOOP_21_1_VITIS_LOOP_27_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_real_address0,
        sample_real_ce0,
        sample_real_q0,
        sample_imag_address0,
        sample_imag_ce0,
        sample_imag_q0,
        temp_real_address0,
        temp_real_ce0,
        temp_real_we0,
        temp_real_d0,
        temp_imag_address0,
        temp_imag_ce0,
        temp_imag_we0,
        temp_imag_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] sample_real_address0;
output   sample_real_ce0;
input  [63:0] sample_real_q0;
output  [7:0] sample_imag_address0;
output   sample_imag_ce0;
input  [63:0] sample_imag_q0;
output  [7:0] temp_real_address0;
output   temp_real_ce0;
output   temp_real_we0;
output  [63:0] temp_real_d0;
output  [7:0] temp_imag_address0;
output   temp_imag_ce0;
output   temp_imag_we0;
output  [63:0] temp_imag_d0;

reg ap_idle;
reg sample_real_ce0;
reg sample_imag_ce0;
reg temp_real_ce0;
reg temp_real_we0;
reg temp_imag_ce0;
reg temp_imag_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_state72_pp0_stage7_iter8;
wire    ap_block_state80_pp0_stage7_iter9;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln21_reg_395;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] grp_fu_172_p2;
reg   [63:0] reg_184;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_state73_pp0_stage0_iter9;
wire    ap_block_state81_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] icmp_ln21_fu_218_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_state74_pp0_stage1_iter9;
wire    ap_block_state82_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln21_reg_395_pp0_iter1_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter2_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter3_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter4_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter5_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter6_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter7_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter8_reg;
reg   [0:0] icmp_ln21_reg_395_pp0_iter9_reg;
wire   [16:0] add_ln21_fu_224_p2;
reg   [16:0] add_ln21_reg_399;
reg   [8:0] j_load_reg_404;
reg   [8:0] i_load_reg_409;
wire   [0:0] icmp_ln27_fu_236_p2;
reg   [0:0] icmp_ln27_reg_414;
reg   [0:0] icmp_ln27_reg_414_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter3_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter4_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter5_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter6_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter7_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter8_reg;
reg   [0:0] icmp_ln27_reg_414_pp0_iter9_reg;
wire   [8:0] add_ln21_1_fu_242_p2;
reg   [8:0] add_ln21_1_reg_422;
wire   [8:0] select_ln21_3_fu_248_p3;
reg   [8:0] select_ln21_3_reg_427;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_state75_pp0_stage2_iter9;
wire    ap_block_state83_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_11001;
reg   [8:0] select_ln21_3_reg_427_pp0_iter1_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter2_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter3_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter4_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter5_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter6_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter7_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter8_reg;
reg   [8:0] select_ln21_3_reg_427_pp0_iter9_reg;
wire   [31:0] zext_ln21_1_fu_257_p1;
wire   [8:0] select_ln21_fu_262_p3;
reg   [8:0] select_ln21_reg_438;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_state68_pp0_stage3_iter8;
wire    ap_block_state76_pp0_stage3_iter9;
wire    ap_block_state84_pp0_stage3_iter10;
wire    ap_block_pp0_stage3_11001;
reg   [8:0] select_ln21_reg_438_pp0_iter1_reg;
reg   [8:0] select_ln21_reg_438_pp0_iter2_reg;
reg   [8:0] select_ln21_reg_438_pp0_iter3_reg;
reg   [8:0] select_ln21_reg_438_pp0_iter4_reg;
reg   [8:0] select_ln21_reg_438_pp0_iter5_reg;
wire   [31:0] zext_ln29_fu_272_p1;
wire   [63:0] grp_fu_181_p1;
reg   [63:0] w_mid2_v_reg_449;
reg   [63:0] conv6_reg_454;
wire   [0:0] ifzero_fu_282_p2;
reg   [0:0] ifzero_reg_459;
reg   [0:0] ifzero_reg_459_pp0_iter2_reg;
reg   [0:0] ifzero_reg_459_pp0_iter3_reg;
reg   [0:0] ifzero_reg_459_pp0_iter4_reg;
reg   [0:0] ifzero_reg_459_pp0_iter5_reg;
reg   [0:0] ifzero_reg_459_pp0_iter6_reg;
reg   [0:0] ifzero_reg_459_pp0_iter7_reg;
reg   [0:0] ifzero_reg_459_pp0_iter8_reg;
reg   [0:0] ifzero_reg_459_pp0_iter9_reg;
reg   [0:0] ifzero_reg_459_pp0_iter10_reg;
wire   [63:0] grp_fu_176_p2;
reg   [63:0] w_mid2_reg_463;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_state71_pp0_stage6_iter8;
wire    ap_block_state79_pp0_stage6_iter9;
wire    ap_block_pp0_stage6_11001;
reg   [63:0] x_assign_reg_468;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_state70_pp0_stage5_iter8;
wire    ap_block_state78_pp0_stage5_iter9;
wire    ap_block_pp0_stage5_11001;
reg   [63:0] sample_real_load_reg_483;
reg   [63:0] sample_imag_load_reg_488;
wire   [63:0] grp_sin_or_cos_double_s_fu_152_ap_return;
reg   [63:0] tmp_reg_493;
reg   [63:0] c_reg_498;
wire   [63:0] bitcast_ln34_fu_306_p1;
reg   [63:0] bitcast_ln34_reg_503;
wire   [63:0] xor_ln30_fu_313_p2;
reg   [63:0] xor_ln30_reg_508;
wire   [63:0] bitcast_ln34_1_fu_319_p1;
reg   [63:0] bitcast_ln34_1_reg_513;
wire   [63:0] s_fu_323_p1;
reg   [63:0] s_reg_518;
reg   [63:0] mul_reg_523;
reg   [63:0] mul3_reg_528;
reg   [63:0] mul1_reg_533;
reg   [63:0] mul2_reg_538;
wire   [63:0] select_ln21_1_fu_330_p3;
reg   [63:0] select_ln21_1_reg_543;
reg   [63:0] add1_reg_548;
wire   [63:0] select_ln21_2_fu_340_p3;
reg   [63:0] select_ln21_2_reg_553;
wire   [63:0] zext_ln21_fu_347_p1;
reg   [63:0] zext_ln21_reg_558;
reg   [63:0] add2_reg_563;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage3_subdone;
wire    grp_sin_or_cos_double_s_fu_152_ap_start;
wire    grp_sin_or_cos_double_s_fu_152_ap_done;
wire    grp_sin_or_cos_double_s_fu_152_ap_idle;
wire    grp_sin_or_cos_double_s_fu_152_ap_ready;
reg   [0:0] grp_sin_or_cos_double_s_fu_152_do_cos;
reg    grp_sin_or_cos_double_s_fu_152_ap_start_reg;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire   [63:0] j_cast_fu_301_p1;
reg   [63:0] add2824_fu_80;
reg   [63:0] ap_sig_allocacmp_add2824_load;
wire    ap_loop_init;
reg   [63:0] add15_fu_84;
reg   [63:0] ap_sig_allocacmp_add15_load;
reg   [8:0] j_fu_88;
wire   [8:0] add_ln27_fu_277_p2;
reg   [8:0] i_fu_92;
reg   [16:0] indvar_flatten_fu_96;
reg   [63:0] grp_fu_172_p0;
reg   [63:0] grp_fu_172_p1;
reg   [63:0] grp_fu_176_p0;
reg   [63:0] grp_fu_176_p1;
reg   [31:0] grp_fu_181_p0;
wire   [7:0] trunc_ln21_fu_253_p1;
wire   [7:0] trunc_ln29_fu_268_p1;
wire   [63:0] bitcast_ln30_fu_310_p1;
reg   [1:0] grp_fu_172_opcode;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_state69_pp0_stage4_iter8;
wire    ap_block_state77_pp0_stage4_iter9;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage3;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_152_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_sin_or_cos_double_s grp_sin_or_cos_double_s_fu_152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_152_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_152_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_152_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_152_ap_ready),
    .ap_ce(1'b1),
    .t_in(x_assign_reg_468),
    .do_cos(grp_sin_or_cos_double_s_fu_152_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_152_ap_return)
);

dft_dadddsub_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_7_full_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_172_p0),
    .din1(grp_fu_172_p1),
    .opcode(grp_fu_172_opcode),
    .ce(1'b1),
    .dout(grp_fu_172_p2)
);

dft_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_176_p0),
    .din1(grp_fu_176_p1),
    .ce(1'b1),
    .dout(grp_fu_176_p2)
);

dft_sitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_6_no_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_181_p0),
    .ce(1'b1),
    .dout(grp_fu_181_p1)
);

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_152_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
            grp_sin_or_cos_double_s_fu_152_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_152_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_152_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add15_fu_84 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter10 == 1'b1)) begin
            add15_fu_84 <= reg_184;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add2824_fu_80 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add2824_fu_80 <= add2_reg_563;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 9'd0;
        end else if (((icmp_ln21_reg_395 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_92 <= select_ln21_3_reg_427;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_96 <= 17'd0;
        end else if (((icmp_ln21_reg_395 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_96 <= add_ln21_reg_399;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_88 <= 9'd0;
        end else if (((icmp_ln21_reg_395 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_88 <= add_ln27_fu_277_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add1_reg_548 <= grp_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add2_reg_563 <= grp_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln21_fu_218_p2 == 1'd0))) begin
        add_ln21_1_reg_422 <= add_ln21_1_fu_242_p2;
        i_load_reg_409 <= i_fu_92;
        icmp_ln27_reg_414 <= icmp_ln27_fu_236_p2;
        j_load_reg_404 <= j_fu_88;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln21_reg_399 <= add_ln21_fu_224_p2;
        bitcast_ln34_reg_503 <= bitcast_ln34_fu_306_p1;
        icmp_ln21_reg_395 <= icmp_ln21_fu_218_p2;
        icmp_ln21_reg_395_pp0_iter1_reg <= icmp_ln21_reg_395;
        icmp_ln21_reg_395_pp0_iter2_reg <= icmp_ln21_reg_395_pp0_iter1_reg;
        icmp_ln21_reg_395_pp0_iter3_reg <= icmp_ln21_reg_395_pp0_iter2_reg;
        icmp_ln21_reg_395_pp0_iter4_reg <= icmp_ln21_reg_395_pp0_iter3_reg;
        icmp_ln21_reg_395_pp0_iter5_reg <= icmp_ln21_reg_395_pp0_iter4_reg;
        icmp_ln21_reg_395_pp0_iter6_reg <= icmp_ln21_reg_395_pp0_iter5_reg;
        icmp_ln21_reg_395_pp0_iter7_reg <= icmp_ln21_reg_395_pp0_iter6_reg;
        icmp_ln21_reg_395_pp0_iter8_reg <= icmp_ln21_reg_395_pp0_iter7_reg;
        icmp_ln21_reg_395_pp0_iter9_reg <= icmp_ln21_reg_395_pp0_iter8_reg;
        icmp_ln27_reg_414_pp0_iter1_reg <= icmp_ln27_reg_414;
        icmp_ln27_reg_414_pp0_iter2_reg <= icmp_ln27_reg_414_pp0_iter1_reg;
        icmp_ln27_reg_414_pp0_iter3_reg <= icmp_ln27_reg_414_pp0_iter2_reg;
        icmp_ln27_reg_414_pp0_iter4_reg <= icmp_ln27_reg_414_pp0_iter3_reg;
        icmp_ln27_reg_414_pp0_iter5_reg <= icmp_ln27_reg_414_pp0_iter4_reg;
        icmp_ln27_reg_414_pp0_iter6_reg <= icmp_ln27_reg_414_pp0_iter5_reg;
        icmp_ln27_reg_414_pp0_iter7_reg <= icmp_ln27_reg_414_pp0_iter6_reg;
        icmp_ln27_reg_414_pp0_iter8_reg <= icmp_ln27_reg_414_pp0_iter7_reg;
        icmp_ln27_reg_414_pp0_iter9_reg <= icmp_ln27_reg_414_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bitcast_ln34_1_reg_513 <= bitcast_ln34_1_fu_319_p1;
        sample_imag_load_reg_488 <= sample_imag_q0;
        sample_real_load_reg_483 <= sample_real_q0;
        select_ln21_3_reg_427_pp0_iter1_reg <= select_ln21_3_reg_427;
        select_ln21_3_reg_427_pp0_iter2_reg <= select_ln21_3_reg_427_pp0_iter1_reg;
        select_ln21_3_reg_427_pp0_iter3_reg <= select_ln21_3_reg_427_pp0_iter2_reg;
        select_ln21_3_reg_427_pp0_iter4_reg <= select_ln21_3_reg_427_pp0_iter3_reg;
        select_ln21_3_reg_427_pp0_iter5_reg <= select_ln21_3_reg_427_pp0_iter4_reg;
        select_ln21_3_reg_427_pp0_iter6_reg <= select_ln21_3_reg_427_pp0_iter5_reg;
        select_ln21_3_reg_427_pp0_iter7_reg <= select_ln21_3_reg_427_pp0_iter6_reg;
        select_ln21_3_reg_427_pp0_iter8_reg <= select_ln21_3_reg_427_pp0_iter7_reg;
        select_ln21_3_reg_427_pp0_iter9_reg <= select_ln21_3_reg_427_pp0_iter8_reg;
        xor_ln30_reg_508 <= xor_ln30_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        c_reg_498 <= grp_sin_or_cos_double_s_fu_152_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_395 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv6_reg_454 <= grp_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_395 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifzero_reg_459 <= ifzero_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifzero_reg_459_pp0_iter10_reg <= ifzero_reg_459_pp0_iter9_reg;
        ifzero_reg_459_pp0_iter2_reg <= ifzero_reg_459;
        ifzero_reg_459_pp0_iter3_reg <= ifzero_reg_459_pp0_iter2_reg;
        ifzero_reg_459_pp0_iter4_reg <= ifzero_reg_459_pp0_iter3_reg;
        ifzero_reg_459_pp0_iter5_reg <= ifzero_reg_459_pp0_iter4_reg;
        ifzero_reg_459_pp0_iter6_reg <= ifzero_reg_459_pp0_iter5_reg;
        ifzero_reg_459_pp0_iter7_reg <= ifzero_reg_459_pp0_iter6_reg;
        ifzero_reg_459_pp0_iter8_reg <= ifzero_reg_459_pp0_iter7_reg;
        ifzero_reg_459_pp0_iter9_reg <= ifzero_reg_459_pp0_iter8_reg;
        select_ln21_1_reg_543 <= select_ln21_1_fu_330_p3;
        zext_ln21_reg_558[8 : 0] <= zext_ln21_fu_347_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul1_reg_533 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul2_reg_538 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul3_reg_528 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_reg_523 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_184 <= grp_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        s_reg_518 <= s_fu_323_p1;
        select_ln21_2_reg_553 <= select_ln21_2_fu_340_p3;
        select_ln21_reg_438_pp0_iter1_reg <= select_ln21_reg_438;
        select_ln21_reg_438_pp0_iter2_reg <= select_ln21_reg_438_pp0_iter1_reg;
        select_ln21_reg_438_pp0_iter3_reg <= select_ln21_reg_438_pp0_iter2_reg;
        select_ln21_reg_438_pp0_iter4_reg <= select_ln21_reg_438_pp0_iter3_reg;
        select_ln21_reg_438_pp0_iter5_reg <= select_ln21_reg_438_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_395 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln21_3_reg_427 <= select_ln21_3_fu_248_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_395 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln21_reg_438 <= select_ln21_fu_262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_reg_493 <= grp_sin_or_cos_double_s_fu_152_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        w_mid2_reg_463 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_395 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        w_mid2_v_reg_449 <= grp_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        x_assign_reg_468 <= grp_fu_176_p2;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_395 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln21_reg_395_pp0_iter9_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter9_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_add15_load = reg_184;
    end else begin
        ap_sig_allocacmp_add15_load = add15_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_add2824_load = add2_reg_563;
    end else begin
        ap_sig_allocacmp_add2824_load = add2824_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_172_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_172_opcode = 2'd0;
    end else begin
        grp_fu_172_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_172_p0 = select_ln21_2_reg_553;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_172_p0 = select_ln21_1_reg_543;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_172_p0 = mul2_reg_538;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_172_p0 = mul_reg_523;
    end else begin
        grp_fu_172_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_172_p1 = add1_reg_548;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_172_p1 = reg_184;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_172_p1 = mul3_reg_528;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_172_p1 = mul1_reg_533;
    end else begin
        grp_fu_172_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_176_p0 = bitcast_ln34_reg_503;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_176_p0 = bitcast_ln34_1_reg_513;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_176_p0 = bitcast_ln34_1_fu_319_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_176_p0 = bitcast_ln34_fu_306_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_176_p0 = conv6_reg_454;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_176_p0 = w_mid2_v_reg_449;
    end else begin
        grp_fu_176_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_176_p1 = s_reg_518;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_176_p1 = s_fu_323_p1;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_176_p1 = c_reg_498;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_176_p1 = w_mid2_reg_463;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_176_p1 = 64'd4582731459160450590;
    end else begin
        grp_fu_176_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_181_p0 = zext_ln29_fu_272_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_181_p0 = zext_ln21_1_fu_257_p1;
        end else begin
            grp_fu_181_p0 = 'bx;
        end
    end else begin
        grp_fu_181_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_sin_or_cos_double_s_fu_152_do_cos = 1'd1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_sin_or_cos_double_s_fu_152_do_cos = 1'd0;
        end else begin
            grp_sin_or_cos_double_s_fu_152_do_cos = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_152_do_cos = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sample_imag_ce0 = 1'b1;
    end else begin
        sample_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sample_real_ce0 = 1'b1;
    end else begin
        sample_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        temp_imag_ce0 = 1'b1;
    end else begin
        temp_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ifzero_reg_459_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        temp_imag_we0 = 1'b1;
    end else begin
        temp_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_real_ce0 = 1'b1;
    end else begin
        temp_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ifzero_reg_459_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_real_we0 = 1'b1;
    end else begin
        temp_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_1_fu_242_p2 = (i_fu_92 + 9'd1);

assign add_ln21_fu_224_p2 = (indvar_flatten_fu_96 + 17'd1);

assign add_ln27_fu_277_p2 = (select_ln21_reg_438 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln30_fu_310_p1 = tmp_reg_493;

assign bitcast_ln34_1_fu_319_p1 = sample_imag_load_reg_488;

assign bitcast_ln34_fu_306_p1 = sample_real_load_reg_483;

assign grp_sin_or_cos_double_s_fu_152_ap_start = grp_sin_or_cos_double_s_fu_152_ap_start_reg;

assign icmp_ln21_fu_218_p2 = ((indvar_flatten_fu_96 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_236_p2 = ((j_fu_88 == 9'd256) ? 1'b1 : 1'b0);

assign ifzero_fu_282_p2 = ((add_ln27_fu_277_p2 == 9'd256) ? 1'b1 : 1'b0);

assign j_cast_fu_301_p1 = select_ln21_reg_438_pp0_iter5_reg;

assign s_fu_323_p1 = xor_ln30_reg_508;

assign sample_imag_address0 = j_cast_fu_301_p1;

assign sample_real_address0 = j_cast_fu_301_p1;

assign select_ln21_1_fu_330_p3 = ((icmp_ln27_reg_414_pp0_iter8_reg[0:0] == 1'b1) ? 64'd0 : ap_sig_allocacmp_add15_load);

assign select_ln21_2_fu_340_p3 = ((icmp_ln27_reg_414_pp0_iter9_reg[0:0] == 1'b1) ? 64'd0 : ap_sig_allocacmp_add2824_load);

assign select_ln21_3_fu_248_p3 = ((icmp_ln27_reg_414[0:0] == 1'b1) ? add_ln21_1_reg_422 : i_load_reg_409);

assign select_ln21_fu_262_p3 = ((icmp_ln27_reg_414[0:0] == 1'b1) ? 9'd0 : j_load_reg_404);

assign temp_imag_address0 = zext_ln21_reg_558;

assign temp_imag_d0 = add2_reg_563;

assign temp_real_address0 = zext_ln21_fu_347_p1;

assign temp_real_d0 = reg_184;

assign trunc_ln21_fu_253_p1 = select_ln21_3_fu_248_p3[7:0];

assign trunc_ln29_fu_268_p1 = select_ln21_fu_262_p3[7:0];

assign xor_ln30_fu_313_p2 = (bitcast_ln30_fu_310_p1 ^ 64'd9223372036854775808);

assign zext_ln21_1_fu_257_p1 = trunc_ln21_fu_253_p1;

assign zext_ln21_fu_347_p1 = select_ln21_3_reg_427_pp0_iter9_reg;

assign zext_ln29_fu_272_p1 = trunc_ln29_fu_268_p1;

always @ (posedge ap_clk) begin
    zext_ln21_reg_558[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //dft_dft_Pipeline_VITIS_LOOP_21_1_VITIS_LOOP_27_2
